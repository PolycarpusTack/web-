"""Add provider and usage tracking models

Revision ID: 641ed78cdc27
Revises: 8f2a7b1e9d5c
Create Date: 2025-06-02 11:53:55.825422

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision = '641ed78cdc27'
down_revision = '8f2a7b1e9d5c'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('provider_health',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('provider_type', sa.String(), nullable=True),
    sa.Column('is_available', sa.Boolean(), nullable=True),
    sa.Column('last_check_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('response_time', sa.Float(), nullable=True),
    sa.Column('error_rate', sa.Float(), nullable=True),
    sa.Column('status_message', sa.Text(), nullable=True),
    sa.Column('models_count', sa.Integer(), nullable=True),
    sa.Column('capabilities', sa.JSON(), nullable=True),
    sa.Column('pricing_data', sa.JSON(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_provider_health_provider_type'), 'provider_health', ['provider_type'], unique=True)
    op.create_table('budget_alerts',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('alert_name', sa.String(), nullable=True),
    sa.Column('threshold_amount', sa.Float(), nullable=True),
    sa.Column('period', sa.String(), nullable=True),
    sa.Column('provider_type', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('triggered_count', sa.Integer(), nullable=True),
    sa.Column('last_triggered_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('conversation_folders',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('color', sa.String(), nullable=True),
    sa.Column('icon', sa.String(), nullable=True),
    sa.Column('owner_id', sa.String(), nullable=False),
    sa.Column('parent_folder_id', sa.String(), nullable=True),
    sa.Column('is_system', sa.Boolean(), nullable=True),
    sa.Column('is_shared', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('meta_data', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['parent_folder_id'], ['conversation_folders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_conversation_folders_name'), 'conversation_folders', ['name'], unique=False)
    op.create_table('conversation_templates',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('creator_id', sa.String(), nullable=False),
    sa.Column('model_id', sa.String(), nullable=False),
    sa.Column('system_prompt', sa.Text(), nullable=True),
    sa.Column('initial_messages', sa.JSON(), nullable=True),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('is_featured', sa.Boolean(), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['model_id'], ['models.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_conversation_templates_name'), 'conversation_templates', ['name'], unique=False)
    op.create_table('provider_credentials',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('provider_type', sa.String(), nullable=True),
    sa.Column('credential_name', sa.String(), nullable=True),
    sa.Column('encrypted_api_key', sa.Text(), nullable=True),
    sa.Column('encrypted_data', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_provider_credentials_provider_type'), 'provider_credentials', ['provider_type'], unique=False)
    op.create_table('usage_records',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('provider_type', sa.String(), nullable=True),
    sa.Column('model_id', sa.String(), nullable=True),
    sa.Column('operation', sa.String(), nullable=True),
    sa.Column('input_tokens', sa.Integer(), nullable=True),
    sa.Column('output_tokens', sa.Integer(), nullable=True),
    sa.Column('total_tokens', sa.Integer(), nullable=True),
    sa.Column('cost', sa.Float(), nullable=True),
    sa.Column('pipeline_id', sa.String(), nullable=True),
    sa.Column('execution_id', sa.String(), nullable=True),
    sa.Column('request_id', sa.String(), nullable=True),
    sa.Column('response_time', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('meta_data', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_usage_records_provider_type'), 'usage_records', ['provider_type'], unique=False)
    op.create_table('user_settings',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('provider_credentials', sa.JSON(), nullable=True),
    sa.Column('preferences', sa.JSON(), nullable=True),
    sa.Column('usage_limits', sa.JSON(), nullable=True),
    sa.Column('notification_settings', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('conversation_activities',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('conversation_id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('activity_type', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('ip_address', sa.String(), nullable=True),
    sa.Column('user_agent', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('conversation_bookmarks',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('conversation_id', sa.String(), nullable=False),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('conversation_collaborators',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('conversation_id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('permission_level', sa.Enum('READ', 'WRITE', 'ADMIN', name='permissionlevel'), nullable=True),
    sa.Column('invited_by_id', sa.String(), nullable=False),
    sa.Column('invited_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('accepted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_activity_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('meta_data', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ),
    sa.ForeignKeyConstraint(['invited_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('conversation_folder_association',
    sa.Column('conversation_id', sa.String(), nullable=False),
    sa.Column('folder_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ),
    sa.ForeignKeyConstraint(['folder_id'], ['conversation_folders.id'], ),
    sa.PrimaryKeyConstraint('conversation_id', 'folder_id')
    )
    op.create_table('conversation_shares',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('conversation_id', sa.String(), nullable=False),
    sa.Column('share_type', sa.Enum('PRIVATE', 'LINK', 'PUBLIC', 'TEAM', name='sharetype'), nullable=True),
    sa.Column('share_token', sa.String(), nullable=True),
    sa.Column('shared_by_id', sa.String(), nullable=False),
    sa.Column('shared_with_id', sa.String(), nullable=True),
    sa.Column('team_id', sa.String(), nullable=True),
    sa.Column('permission_level', sa.Enum('READ', 'WRITE', 'ADMIN', name='permissionlevel'), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('access_count', sa.Integer(), nullable=True),
    sa.Column('last_accessed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('meta_data', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ),
    sa.ForeignKeyConstraint(['shared_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['shared_with_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_conversation_shares_share_token'), 'conversation_shares', ['share_token'], unique=True)
    op.create_table('folder_permission_association',
    sa.Column('folder_id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('permission_level', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['folder_id'], ['conversation_folders.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('folder_id', 'user_id')
    )
    op.create_table('conversation_share_association',
    sa.Column('conversation_id', sa.String(), nullable=False),
    sa.Column('share_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ),
    sa.ForeignKeyConstraint(['share_id'], ['conversation_shares.id'], ),
    sa.PrimaryKeyConstraint('conversation_id', 'share_id')
    )
    op.drop_index('idx_step_execution_pipeline_execution_id', table_name='pipeline_step_executions')
    op.drop_index('idx_step_execution_started_at', table_name='pipeline_step_executions')
    op.drop_index('idx_step_execution_status', table_name='pipeline_step_executions')
    op.drop_index('idx_step_execution_step_id', table_name='pipeline_step_executions')
    op.drop_table('pipeline_step_executions')
    op.drop_index('idx_pipeline_execution_pipeline_id', table_name='pipeline_executions')
    op.drop_index('idx_pipeline_execution_started_at', table_name='pipeline_executions')
    op.drop_index('idx_pipeline_execution_status', table_name='pipeline_executions')
    op.drop_index('idx_pipeline_execution_user_id', table_name='pipeline_executions')
    op.drop_table('pipeline_executions')
    op.drop_index('idx_pipeline_step_enabled', table_name='pipeline_steps')
    op.drop_index('idx_pipeline_step_order', table_name='pipeline_steps')
    op.drop_index('idx_pipeline_step_pipeline_id', table_name='pipeline_steps')
    op.drop_index('idx_pipeline_step_type', table_name='pipeline_steps')
    op.drop_table('pipeline_steps')
    op.drop_index('idx_pipeline_active', table_name='pipelines')
    op.drop_index('idx_pipeline_public', table_name='pipelines')
    op.drop_index('idx_pipeline_updated_at', table_name='pipelines')
    op.drop_index('idx_pipeline_user_id', table_name='pipelines')
    op.drop_table('pipelines')
    op.drop_index('idx_api_key', table_name='api_keys')
    op.drop_index('idx_api_key_active_expiry', table_name='api_keys', sqlite_where=sa.text('is_active = True'))
    op.drop_index('idx_api_key_user_id', table_name='api_keys')
    op.drop_index('idx_conversation_model_id', table_name='conversations')
    op.drop_index('idx_conversation_updated_at', table_name='conversations')
    op.drop_index('idx_file_analyzed', table_name='files')
    op.drop_index('idx_file_conversation_id', table_name='files')
    op.drop_index('idx_file_user_id', table_name='files')
    op.drop_index('idx_message_file_file_id', table_name='message_files')
    op.drop_index('idx_message_file_message_id', table_name='message_files')
    op.drop_index('idx_thread_conversation_id', table_name='message_threads')
    op.drop_index('idx_thread_creator_id', table_name='message_threads')
    op.drop_index('idx_thread_parent_id', table_name='message_threads')
    op.drop_index('idx_message_conversation_created', table_name='messages')
    op.drop_index('idx_message_conversation_id', table_name='messages')
    op.drop_index('idx_message_created_at', table_name='messages')
    op.drop_index('idx_message_thread_id', table_name='messages')
    op.drop_index('idx_message_user_id', table_name='messages')
    op.drop_index('idx_model_active', table_name='models')
    op.drop_index('idx_model_provider', table_name='models')
    op.add_column('users', sa.Column('is_superuser', sa.Boolean(), nullable=True))
    op.drop_index('idx_user_active', table_name='users')
    op.drop_index('idx_user_email', table_name='users')
    op.drop_index('idx_user_username', table_name='users')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index('idx_user_username', 'users', ['username'], unique=False)
    op.create_index('idx_user_email', 'users', ['email'], unique=False)
    op.create_index('idx_user_active', 'users', ['is_active'], unique=False)
    op.drop_column('users', 'is_superuser')
    op.create_index('idx_model_provider', 'models', ['provider'], unique=False)
    op.create_index('idx_model_active', 'models', ['is_active'], unique=False)
    op.create_index('idx_message_user_id', 'messages', ['user_id'], unique=False)
    op.create_index('idx_message_thread_id', 'messages', ['thread_id'], unique=False)
    op.create_index('idx_message_created_at', 'messages', ['created_at'], unique=False)
    op.create_index('idx_message_conversation_id', 'messages', ['conversation_id'], unique=False)
    op.create_index('idx_message_conversation_created', 'messages', ['conversation_id', 'created_at'], unique=False)
    op.create_index('idx_thread_parent_id', 'message_threads', ['parent_thread_id'], unique=False)
    op.create_index('idx_thread_creator_id', 'message_threads', ['creator_id'], unique=False)
    op.create_index('idx_thread_conversation_id', 'message_threads', ['conversation_id'], unique=False)
    op.create_index('idx_message_file_message_id', 'message_files', ['message_id'], unique=False)
    op.create_index('idx_message_file_file_id', 'message_files', ['file_id'], unique=False)
    op.create_index('idx_file_user_id', 'files', ['user_id'], unique=False)
    op.create_index('idx_file_conversation_id', 'files', ['conversation_id'], unique=False)
    op.create_index('idx_file_analyzed', 'files', ['analyzed'], unique=False)
    op.create_index('idx_conversation_updated_at', 'conversations', ['updated_at'], unique=False)
    op.create_index('idx_conversation_model_id', 'conversations', ['model_id'], unique=False)
    op.create_index('idx_api_key_user_id', 'api_keys', ['user_id'], unique=False)
    op.create_index('idx_api_key_active_expiry', 'api_keys', ['is_active', 'expires_at'], unique=False, sqlite_where=sa.text('is_active = True'))
    op.create_index('idx_api_key', 'api_keys', ['key'], unique=False)
    op.create_table('pipelines',
    sa.Column('id', sa.VARCHAR(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(now())'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.Column('user_id', sa.VARCHAR(), nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.Column('is_public', sa.BOOLEAN(), nullable=True),
    sa.Column('version', sa.VARCHAR(), nullable=True),
    sa.Column('tags', sqlite.JSON(), nullable=True),
    sa.Column('config', sqlite.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_pipeline_user_id', 'pipelines', ['user_id'], unique=False)
    op.create_index('idx_pipeline_updated_at', 'pipelines', ['updated_at'], unique=False)
    op.create_index('idx_pipeline_public', 'pipelines', ['is_public'], unique=False)
    op.create_index('idx_pipeline_active', 'pipelines', ['is_active'], unique=False)
    op.create_table('pipeline_steps',
    sa.Column('id', sa.VARCHAR(), nullable=False),
    sa.Column('pipeline_id', sa.VARCHAR(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('type', sa.VARCHAR(), nullable=False),
    sa.Column('order', sa.INTEGER(), nullable=False),
    sa.Column('config', sqlite.JSON(), nullable=False),
    sa.Column('input_mapping', sqlite.JSON(), nullable=True),
    sa.Column('output_mapping', sqlite.JSON(), nullable=True),
    sa.Column('is_enabled', sa.BOOLEAN(), nullable=True),
    sa.Column('timeout', sa.INTEGER(), nullable=True),
    sa.Column('retry_config', sqlite.JSON(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(now())'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['pipeline_id'], ['pipelines.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_pipeline_step_type', 'pipeline_steps', ['type'], unique=False)
    op.create_index('idx_pipeline_step_pipeline_id', 'pipeline_steps', ['pipeline_id'], unique=False)
    op.create_index('idx_pipeline_step_order', 'pipeline_steps', ['order'], unique=False)
    op.create_index('idx_pipeline_step_enabled', 'pipeline_steps', ['is_enabled'], unique=False)
    op.create_table('pipeline_executions',
    sa.Column('id', sa.VARCHAR(), nullable=False),
    sa.Column('pipeline_id', sa.VARCHAR(), nullable=False),
    sa.Column('user_id', sa.VARCHAR(), nullable=False),
    sa.Column('status', sa.VARCHAR(), nullable=False),
    sa.Column('started_at', sa.DATETIME(), server_default=sa.text('(now())'), nullable=True),
    sa.Column('completed_at', sa.DATETIME(), nullable=True),
    sa.Column('input_parameters', sqlite.JSON(), nullable=True),
    sa.Column('results', sqlite.JSON(), nullable=True),
    sa.Column('error', sa.TEXT(), nullable=True),
    sa.Column('duration_ms', sa.INTEGER(), nullable=True),
    sa.Column('logs', sqlite.JSON(), nullable=True),
    sa.Column('metadata', sqlite.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['pipeline_id'], ['pipelines.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_pipeline_execution_user_id', 'pipeline_executions', ['user_id'], unique=False)
    op.create_index('idx_pipeline_execution_status', 'pipeline_executions', ['status'], unique=False)
    op.create_index('idx_pipeline_execution_started_at', 'pipeline_executions', ['started_at'], unique=False)
    op.create_index('idx_pipeline_execution_pipeline_id', 'pipeline_executions', ['pipeline_id'], unique=False)
    op.create_table('pipeline_step_executions',
    sa.Column('id', sa.VARCHAR(), nullable=False),
    sa.Column('pipeline_execution_id', sa.VARCHAR(), nullable=False),
    sa.Column('step_id', sa.VARCHAR(), nullable=False),
    sa.Column('status', sa.VARCHAR(), nullable=False),
    sa.Column('started_at', sa.DATETIME(), server_default=sa.text('(now())'), nullable=True),
    sa.Column('completed_at', sa.DATETIME(), nullable=True),
    sa.Column('inputs', sqlite.JSON(), nullable=True),
    sa.Column('outputs', sqlite.JSON(), nullable=True),
    sa.Column('error', sa.TEXT(), nullable=True),
    sa.Column('logs', sqlite.JSON(), nullable=True),
    sa.Column('duration_ms', sa.INTEGER(), nullable=True),
    sa.Column('metrics', sqlite.JSON(), nullable=True),
    sa.Column('model_id', sa.VARCHAR(), nullable=True),
    sa.ForeignKeyConstraint(['model_id'], ['models.id'], ),
    sa.ForeignKeyConstraint(['pipeline_execution_id'], ['pipeline_executions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['step_id'], ['pipeline_steps.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_step_execution_step_id', 'pipeline_step_executions', ['step_id'], unique=False)
    op.create_index('idx_step_execution_status', 'pipeline_step_executions', ['status'], unique=False)
    op.create_index('idx_step_execution_started_at', 'pipeline_step_executions', ['started_at'], unique=False)
    op.create_index('idx_step_execution_pipeline_execution_id', 'pipeline_step_executions', ['pipeline_execution_id'], unique=False)
    op.drop_table('conversation_share_association')
    op.drop_table('folder_permission_association')
    op.drop_index(op.f('ix_conversation_shares_share_token'), table_name='conversation_shares')
    op.drop_table('conversation_shares')
    op.drop_table('conversation_folder_association')
    op.drop_table('conversation_collaborators')
    op.drop_table('conversation_bookmarks')
    op.drop_table('conversation_activities')
    op.drop_table('user_settings')
    op.drop_index(op.f('ix_usage_records_provider_type'), table_name='usage_records')
    op.drop_table('usage_records')
    op.drop_index(op.f('ix_provider_credentials_provider_type'), table_name='provider_credentials')
    op.drop_table('provider_credentials')
    op.drop_index(op.f('ix_conversation_templates_name'), table_name='conversation_templates')
    op.drop_table('conversation_templates')
    op.drop_index(op.f('ix_conversation_folders_name'), table_name='conversation_folders')
    op.drop_table('conversation_folders')
    op.drop_table('budget_alerts')
    op.drop_index(op.f('ix_provider_health_provider_type'), table_name='provider_health')
    op.drop_table('provider_health')
    # ### end Alembic commands ###
